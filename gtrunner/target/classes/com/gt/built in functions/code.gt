in [A, 4]
out [E]

new [node1 = 5]

// this is a comment.

if [logic [node1 < 2]] {
    math [node1 = (node1*2)^3]
} else if [logic [node1 > 3]] {
    math [node1 = (node1*-1)*3]

    if [logic [1 > 2]] {
        math [node1 = (node1*-2)*3]
    } else {
        math [node1 = (node1*-3)*3]
    }

    math [node1 = (node1*-1)*3]
} else {
    math [node1 = 4]
}

logic [node1 = 4 < node1]

//assembly style loop
new [i = 0]
label:
math [i = i + 1]
if[logic [i < 10]] {
    branch [label]  //branch test
}

new [array1 = {0,1,2}]

print [i]

//funct [multiplyByTwo(someNode or someValue)]    //every function must have a return statement at the end, even if nothing is returned
    //something happens here...
//    return someValue or someNode    //this is how the compiler knows a function has ended